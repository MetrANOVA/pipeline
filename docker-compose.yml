version: '3.8'

services:
  flow_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=clickhouse
      - CLICKHOUSE_PROCESSORS=metranova.processors.clickhouse.stardust.FlowProcessor
      - KAFKA_TOPIC=metranova_flow
      - IP_CACHER_TABLES=${CLICKHOUSE_SCIREG_METADATA_TABLE}
    env_file:
      - .env
    volumes:
      - ./certificates:/app/certificates:ro
      - ./caches:/app/caches:ro
    restart: always
    deploy:
      mode: replicated
      replicas: 10
  
  interface_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=clickhouse
      - CLICKHOUSE_PROCESSORS=metranova.processors.clickhouse.stardust.InterfaceTrafficProcessor
#      - REDIS_PROCESSORS=metranova.processors.redis.interface.InterfaceMetadataProcessor
      - KAFKA_TOPIC=metranova_interface
    env_file:
      - .env
    volumes:
      - ./certificates:/app/certificates:ro
    restart: always
    deploy:
      mode: replicated
      replicas: 10

  metadata_export_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=metadata_export
      - CLICKHOUSE_PROCESSORS=metranova.processors.clickhouse.interface.InterfaceMetadataProcessor
      - CLICKHOUSE_CACHER_TABLES=${CLICKHOUSE_IF_METADATA_TABLE}
    env_file:
      - .env
    restart: always

  metadata_import_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=metadata_import
      - CLICKHOUSE_CONSUMER_TABLES=${CLICKHOUSE_IF_METADATA_TABLE}
    env_file:
      - .env
    restart: always
  
  scireg_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=scireg
      - CLICKHOUSE_PROCESSORS=metranova.processors.clickhouse.scireg.ScienceRegistryProcessor
      - CLICKHOUSE_CACHER_TABLES=${CLICKHOUSE_SCIREG_METADATA_TABLE}
    env_file:
      - .env
    restart: always
  
  ip_metadata_import_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=ip_metadata_import
      - CLICKHOUSE_CONSUMER_TABLES=${CLICKHOUSE_SCIREG_METADATA_TABLE}
      - FILE_PROCESSORS=metranova.processors.file.base.IPTriePickleFileProcessor
    env_file:
      - .env
    volumes:
      - ./caches:/app/caches:rw
    restart: always

  sfacctd_pipeline:
    image: metranova/pipeline:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - PIPELINE_TYPE=clickhouse
      - CLICKHOUSE_PROCESSORS=metranova.processors.clickhouse.pmacct.SFAcctdFlowProcessor
      - KAFKA_TOPIC=metranova_sflow
      - IP_CACHER_TABLES=${CLICKHOUSE_SCIREG_METADATA_TABLE}
    env_file:
      - .env
    volumes:
      - ./certificates:/app/certificates:ro
      - ./caches:/app/caches:ro
    restart: always
    deploy:
      mode: replicated
      replicas: 10

  redis:
    image: redis:8.2.1
    ports:
      - "6379:6379"